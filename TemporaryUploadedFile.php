<?php

namespace common\modules\file_management\models;

use Yii;
use yii\base\ErrorException;
use yii\db\Expression;
use yii\helpers\Json;

/**
 * This is the model class for table "file_management.temp_uploaded_file".
 *
 * @property string $id
 * @property string $base_name
 * @property integer $error
 * @property string $extension
 * @property boolean $has_error
 * @property string $name
 * @property integer $size
 * @property string $temp_name
 * @property string $type
 * @property string $data
 * @property string $file
 */
class TemporaryUploadedFile extends \yii\db\ActiveRecord
{
    private $_uploadedFile;
    private $_data;
    public $directory;

    /**
     * @param \yii\web\UploadedFile $uploadedFile
     * @param Array $data Extra data with uploaded file
     * @throws ErrorException
     * @throws \Exception
     */
    public function init($uploadedFile=null, $data=null,$directory=null)
    {
        parent::init(); // TODO: Change the autogenerated stub
        if($uploadedFile){
            $this->setUploadedFile($uploadedFile,$data);
        }
        $this->directory=$directory;
    }
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'file_management.temp_uploaded_file';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['base_name', 'extension', 'name', 'temp_name', 'type', 'data', 'file'], 'string'],
            [['error', 'size'], 'integer'],
            [['has_error'], 'boolean']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'base_name' => Yii::t('app', 'Base Name'),
            'error' => Yii::t('app', 'Error'),
            'extension' => Yii::t('app', 'Extension'),
            'has_error' => Yii::t('app', 'Has Error'),
            'name' => Yii::t('app', 'Name'),
            'size' => Yii::t('app', 'Size'),
            'temp_name' => Yii::t('app', 'Temp Name'),
            'type' => Yii::t('app', 'Type'),
            'data' => Yii::t('app', 'Data'),
            'file' => Yii::t('app', 'File'),
        ];
    }

    public static function getDirectory(){
        return Yii::getAlias('@uploads').'/images/temp';
    }

    public function getFilePath($tempName=null,$extension=null){
        return $this::getDirectory().'/'.$this->temp_name.'.'.$this->extension;
    }

    public function generateRandomName(){
        return Yii::$app->getSecurity()->generateRandomString();
    }

    /**
     * @param $uploadedFile \yii\web\UploadedFile
     * @param $data String Json Format data came with file
     */
    public function setUploadedFile($uploadedFile,$data=null){
        if(!$uploadedFile){
            throw new ErrorException('File not found');
        }

        $tempName = $this->generateRandomName();

        $this->_uploadedFile = $uploadedFile;
        $this->base_name = $uploadedFile->baseName;
        $this->extension = $uploadedFile->extension;
        $this->has_error = $uploadedFile->hasError;
        $this->size = $uploadedFile->size;
        $this->name = $uploadedFile->name;
        $this->temp_name = $tempName;
        $this->type = $uploadedFile->type;
        //$this->data = $data;
        try{
            $uploadedFile->saveAs($this->getFilePath());
        }catch( ErrorException $e){
            throw $e;
        }
    }

    public function setData($data){
        $this->_data=$data;
    }

    public function beforeValidate()
    {
        if(parent::beforeValidate()){
            if(is_array($this->data) || is_object($this->data)){
                $this->data=Json::encode($this->data);
            }

            return true;
        } // TODO: Change the autogenerated stub
    }


    public function beforeSave($insert)
    {
        if(parent::beforeSave($insert)){
            // TODO: Change the autogenerated stub

            if($this->data){
                $this->data=new Expression("(select '".$this->data."'::JSON)");
            }

            return true;
        }
    }

}
